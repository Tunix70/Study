package main.java.com.Tunix70.javacore.chapter15;

//функциональный интерфейс
interface MyNumber {
    double getValue();
}

class LambdaDemo {
    public static void main(String[] args) {
        MyNumber myNum; //объявить ссылку на функциональный интерфейс
        /*здесь лямбда-выражение просто является константным выражением
        когда оно присваивается ссылочной переменной myNum, получается экземпляр
        класса, в котором лямбда-выражение реализует метод getValue()
        из функционального интерфейса MyNumber
         */
        myNum = () -> 123.45;
        //вызвать метод getValue(),предоставляемый присвоенным ранее лямбда-выражением
        System.out.println("Фиксированное значение: " + myNum.getValue());

        //здесь испольуется более сложное выражение
        myNum = () -> Math.random() * 100;
        System.out.println("Случайное значение: " + myNum.getValue());
        System.out.println("Еще одно случайное значение: " + myNum.getValue());

        /* лямюда выражение должно быть совместимо с абстрактным методом, определяемым
        в функц интерфейсе. Поэтому след строка ошибочна:
       */
//        myNum = () -> "123.03";
    }
}
